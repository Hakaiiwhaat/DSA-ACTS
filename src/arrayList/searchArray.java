package arrayList;

import java.awt.Color;
import static arrayList.crtArrayLst.numbersList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author soria
 */
public class searchArray extends javax.swing.JFrame {

    /**
     * Creates new form searchArray
     */
    public searchArray() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        searchVal = new javax.swing.JTextField();
        button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(359, 470));
        setResizable(false);
        getContentPane().setLayout(null);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(6, 6, 64, 23);

        searchVal.setColumns(5);
        searchVal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchValActionPerformed(evt);
            }
        });
        getContentPane().add(searchVal);
        searchVal.setBounds(140, 210, 69, 30);

        button.setBackground(new java.awt.Color(0, 204, 51));
        button.setText("Submit");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        getContentPane().add(button);
        button.setBounds(140, 250, 72, 23);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Enter a number to search");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 180, 170, 20);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("ARRAY CRUDS");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(90, 90, 167, 32);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        arrayLstFrame backToMn = new arrayLstFrame();
        backToMn.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
        boolean inArray = false;
        try {
            int valToSrch = Integer.parseInt(searchVal.getText());
            
            if (numbersList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Array is not initialized.");
                return;
            } else {
                for (int i = 0; i < numbersList.size(); i++) {
                // check if the numPut(the number that user wants to check) matches the value in
                // the array
                // if yes, change the boolean to true, prints the position by incrementing '1'
                // to 'i'
                // because position starts at '1' and the i starts at '0'
                // according to video then break
//                int crrntNum = numbers.get(i);
                if (numbersList.get(i) == valToSrch) {
                    inArray = true;
                    i++;
                    JOptionPane.showMessageDialog(this, "Element " + valToSrch + " found at position: " + i);
                    break;
                } else {
                    inArray = false;
                    // naka for loop, if hindi nag boolean, ma priprint to parehas sa size nung
                    // array
                    // System.out.println("\nElement not found.");
                }
            }
            }
            
        } catch (NumberFormatException e) {
            inArray = true; // para hindi mag execute yung if block sa baba, I think pwede rin 'break;'
            JOptionPane.showMessageDialog(this, "Enter a number.");
        } catch (NullPointerException e) {
            inArray = true; // para hindi mag execute yung if block sa baba, I think pwede rin 'break;'
            JOptionPane.showMessageDialog(this, "Array is empty, please create first.");
        }
        if (!inArray) {
            JOptionPane.showMessageDialog(this, "Element not found!");
        }
    }//GEN-LAST:event_buttonActionPerformed

    private void searchValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchValActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchArray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchArray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchArray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchArray.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchArray().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField searchVal;
    // End of variables declaration//GEN-END:variables
}
