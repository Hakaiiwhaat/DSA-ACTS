package mainPackage;


import java.awt.Color;

import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author soria
 */
public class selectionSort extends javax.swing.JFrame {

    /**
     * Creates new form selectionSort
     */
    public selectionSort() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        sortBut = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(359, 470));
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("ARRAY CRUDS");

        sortBut.setBackground(new java.awt.Color(0, 204, 51));
        sortBut.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sortBut.setText("Sort");
        sortBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButActionPerformed(evt);
            }
        });

        displayArea2.setEditable(false);
        displayArea2.setColumns(20);
        displayArea2.setRows(10);
        displayArea2.setWrapStyleWord(true);
        displayArea2.setMinimumSize(null);
        jScrollPane2.setViewportView(displayArea2);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(289, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(jLabel3))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(sortBut, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(441, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(48, 48, 48)
                    .addComponent(sortBut)
                    .addGap(23, 23, 23)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Color bgColor = new Color(204,255,51);
        getContentPane().setBackground(bgColor);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sortButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButActionPerformed
        // TODO add your handling code here:
        sortMethod();
    }//GEN-LAST:event_sortButActionPerformed

    public int[] sortMethod() {
        int rounds = 1;
        if (createArray.numesLen == 0) {
            JOptionPane.showMessageDialog(this, "Array is not initialized.");
        } else {
            boolean inOrder = false;// variable for exiting the loop
            int out, in, min;
            
            while (!inOrder) { // while false
                StringBuilder oa = new StringBuilder();
                oa.append("Original Array: ");
                for (int i = 0; i<createArray.numesLen; i++) {
                    oa.append(createArray.numbers[i]).append(" ");
                } 
                oa.append("\n\n");
                displayArea2.append(oa.toString());
                
                for(out=0; out<createArray.numesLen; out++){ // outer loop{
                    min = out; // minimum
                    for(in=out+1; in<createArray.numesLen; in++){ // inner loop
                        if (createArray.numbers[in] <= createArray.numbers[min]) {
                            min = in; // we have a new min
                        } else {
                            inOrder = true;
                        } 
                    }
                    swap(out, min); // swap them
                    
                    if (rounds != createArray.numesLen + 1) {
                        StringBuilder sb = new StringBuilder();
                        sb.append("Round " + rounds + " : ");
                        for (int i = 0; i < createArray.numesLen; i++) {
                            sb.append(createArray.numbers[i]).append(" ");
                        }
                        sb.append("\n");
                        displayArea2.append(sb.toString());
                        rounds++;
                    } else {
                        break;
                    }
                } // end for(out)
            }
//            StringBuilder sb = new StringBuilder();
//            sb.append("Round " + rounds + " : ");
//            for (int i = 0; i < createArray.numesLen; i++) { //issue will print the same length as numesLen even if already sorted
//                sb.append(createArray.numbers[i]).append(" ");
//            }displayArea2.append(sb.toString());
        }
        return createArray.numbers;
    }
    
    private void swap(int one, int two) {
        int temp = createArray.numbers[one];
        createArray.numbers[one] = createArray.numbers[two];
        createArray.numbers[two] = temp;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        sortOption backToSrt = new sortOption();
        backToSrt.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(selectionSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(selectionSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(selectionSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(selectionSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new selectionSort().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea displayArea2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton sortBut;
    // End of variables declaration//GEN-END:variables
}
